# COMMIT-TRACKING: UUID-20240801-140000-PLATFORM
# Description: Add platform enforcement and update commit tracking header.
# Author: GitHub Copilot
#
# File location diagram:
# jetc/                          <- Main project folder
# ├── README.md                  <- Project documentation
# ├── buildx/                    <- Main buildx directory
# │   └── build/                 <- Build directory
# │       └── 09-opencv/         <- Current directory
# │           └── Dockerfile.meta <- THIS FILE
# =========================================================================
# IMPORTANT: This Dockerfile is designed to be built with Docker buildx.
# All builds MUST use Docker buildx to ensure consistent
# multi-platform and efficient build processes.
# =========================================================================

#
# opencv-python meta-package builder that installs opencv-contrib-python
#
ARG TARGETPLATFORM=linux/arm64
ARG BASE_IMAGE
FROM --platform=$TARGETPLATFORM ${BASE_IMAGE}

ARG OPENCV_VERSION

WORKDIR /opt/opencv-python-meta

RUN echo "[build-system]" >> pyproject.toml && \
    echo "build-backend = 'setuptools.build_meta'" >> pyproject.toml && \
    echo "requires = ['setuptools']" >> pyproject.toml

RUN echo "[metadata]" >> setup.cfg && \
    echo "name = opencv-python" >> setup.cfg && \
    echo "version = ${OPENCV_VERSION}" >> setup.cfg && \
    echo "description = opencv-python ${OPENCV_VERSION} (with CUDA)" >> setup.cfg && \
    echo "authors = opencv" >> setup.cfg && \
    echo "license = MIT" >> setup.cfg && \
    echo "" >> setup.cfg && \
    echo "[options]" >> setup.cfg && \
    echo "install_requires =" >> setup.cfg && \
    echo "    opencv-contrib-python~=${OPENCV_VERSION}" >> setup.cfg
    
RUN cat pyproject.toml && cat setup.cfg
RUN pip3 wheel --wheel-dir=/opt --no-deps --verbose .
RUN twine upload --verbose /opt/opencv_python*.whl || echo "failed to upload wheel to ${TWINE_REPOSITORY_URL}"
RUN pip3 install opencv-python || echo "failed to install opencv-python"